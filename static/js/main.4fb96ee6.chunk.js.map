{"version":3,"sources":["List/Lista.js","FormContact/FormContact.js","Languages/Languages.js","Menu/Menu.js","Presentation/Presentation.js","App.js","serviceWorker.js","index.js"],"names":["Lista","_ref","infos","title","infoList","length","map","i","react_default","a","createElement","className","FormContact","state","name","email","topic","message","changeValue","e","_this","setState","Object","defineProperty","target","id","value","formSubmit","preventDefault","console","log","onSubmit","this","htmlFor","type","onChange","Component","Languages","lang","List","l","idioma","nivel","Menu","href","Presentation","img","src","alt","download","App","interest","languages","imgUser","formation","exercice","skills","_this2","axios","get","then","res","data","interesses","idiomas","informacoes","foto","formacao","atividades","habilidades","src_Menu_Menu","src_Presentation_Presentation","List_Lista","src_Languages_Languages","src_FormContact_FormContact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fb96ee6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Lista = ({ infos, title }) => {\n\n    const infoList = infos.length ?\n        (\n            infos.map(i => {\n                return <li className=\"collection-item\">{i}</li>\n            })\n        ) : (\n            <li className=\"collection-item\">Sem informações</li>\n        )\n\n    return (\n        <div>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header black\"><h4 className=\"white-text\">{title}</h4></li>\n                {infoList}\n            </ul>\n        </div>\n    )\n};\n\nexport default Lista;","import React, { Component } from 'react';\nimport './formContact.css'\nclass FormContact extends Component {\n\n    state = {\n        name: null,\n        email: null,\n        topic: null,\n        message: null\n    };\n\n    changeValue = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    formSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    render(){\n        return (\n            <div className=\"formContact\">\n                <h2>Entre em contato!</h2>\n                <form className=\"formContact-form\" onSubmit={ this.formSubmit }>\n                    <label htmlFor=\"name\">Nome:</label>\n                    <input type=\"text\" id=\"name\" onChange={ this.changeValue }></input>\n\n                    <label htmlFor=\"email\">Email:</label>\n                    <input type=\"email\" id=\"email\" onChange={ this.changeValue }></input>\n                    \n                    <label htmlFor=\"topic\">Assunto:</label>\n                    <input type=\"text\" id=\"topic\" onChange={ this.changeValue }></input>\n\n                    <label htmlFor=\"message\">Mensagem:</label>\n                    <input type=\"text\" id=\"message\" onChange={ this.changeValue }></input>\n\n                    <button >Enviar</button>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default FormContact;","import React from 'react';\n\nconst Languages = ({ lang, title }) => {\n\n    const List = lang.length ?\n        (\n            lang.map(l => {\n                return <li className=\"collection-item\">{ l.idioma }  - Nível: { l.nivel }</li>\n            })\n        ) : (\n            <li className=\"collection-item\">Sem informações</li>\n        )\n\n    return (\n        <div>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header black\"><h4 className=\"white-text\">{title}</h4></li>\n                {List}\n            </ul>\n        </div>\n    )\n};\n\nexport default Languages;","import React from 'react';\n\nconst Menu = () => {\n    return (\n        <div className=\"navbar-fixed\">\n            <nav className=\"nav-wrapper black\">\n                <div className=\"container\">\n                    <ul className=\"left\">\n                        <li><a href=\"#\">Informações</a></li>\n                        <li><a href=\"#\">Blog</a></li>\n                        <li><a href=\"#\">Portfólio</a></li>\n                        <li><a href=\"#contact\">Contato</a></li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Menu;","import React from 'react';\n\nconst Presentation = ({ img, title }) => {\n    return (\n        <div className=\"row\">\n            <h2>{ title }</h2>\n            <div className=\"col s4 m6 l6\">\n                <img className=\"responsive-img img-User\" src= { img } alt=\"User image\"></img>\n            </div>\n            <div className=\"col s8 m6 l6\">\n                <p>Olá, meu nome é Gabriel Romero e atualmente sou estudante de Engenharia de Software pela UTFPR de Cornélio Prócopio. Neste site você terá a oportunidade de me conhecer um pouco melhor, espero que goste.</p>\n                <a href=\"https://romerogabriel.github.io/API-Curriculo/RomeroGabriel.io/pdf/Curriculo.pdf\" download className=\"waves-effect waves-light btn\"><i className=\"material-icons left\">cloud_download</i>Download Curriculo PDF</a>\n            </div>\n        </div>\n    );\n}\nexport default Presentation;","import React, { Component } from 'react';\nimport Lista from './List/Lista';\nimport FormContact from './FormContact/FormContact';\nimport Languages from './Languages/Languages'\nimport Menu from './Menu/Menu';\nimport axios from 'axios';\nimport Presentation from './Presentation/Presentation';\n\nclass App extends Component {\n  state = {\n    interest: [],\n    languages: [],\n    imgUser: '',\n    formation: [],\n    exercice: [],\n    skills: []\n  }\n\n  componentDidMount() {\n    axios.get('https://romerogabriel.github.io/API-Curriculo/RomeroGabriel.io/json/romero.json').then(res => {\n    this.setState({\n        interest: res.data.interesses,\n        languages: res.data.idiomas,\n        imgUser: res.data.informacoes.foto,\n        formation: res.data.formacao,\n        exercice: res.data.atividades,\n        skills: res.data.habilidades\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu />\n        <div className=\"container\">\n          <Presentation  img={ this.state.imgUser } title={ \"Apresentação\" }/>\n          <Lista infos={ this.state.interest } title={ 'Interesses' } />\n          <Languages lang={ this.state.languages } title={ 'Idiomas' } />\n          <Lista infos={ this.state.formation } title={ 'Formação' } />\n          <Lista infos={ this.state.exercice } title={ 'Atividades' } />\n          <Lista infos={ this.state.skills } title={ 'Habilidades' } />\n          <FormContact id=\"contact\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}